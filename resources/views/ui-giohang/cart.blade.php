<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    {{-- ƒê·∫£m b·∫£o CSRF token ƒë∆∞·ª£c ƒë·∫∑t trong th·∫ª meta --}}
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title', 'TechStore - C·ª≠a h√†ng c√¥ng ngh·ªá')</title>

    <link rel="stylesheet" href="{{ asset('css/index-style.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cart.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
</head>

<body>
    {{-- Header --}}
    @include('partials.header')

    {{-- N·ªôi dung trang --}}
    <div class="cartp-container">
        <div class="cartp-header">üõçÔ∏è Gi·ªè h√†ng c·ªßa b·∫°n</div>

        <div class="cartp-items">
            @forelse($cartItems as $item)
                {{-- ƒê√£ s·ª≠a: D√πng $item->cart_id thay v√¨ $item->id --}}
                <div class="cartp-item" data-id="{{ $item->cart_id }}">
                    <input type="checkbox" class="cartp-select">
                    {{-- FIX L·ªñI 500: D√πng To√°n t·ª≠ Nullsafe (?->) ƒë·ªÉ ki·ªÉm tra $item->product --}}
                    <img src="{{ $item->product?->image ?? 'https://via.placeholder.com/80' }}">
                    <div>
                        {{-- FIX L·ªñI 500: D√πng To√°n t·ª≠ Nullsafe (?->) --}}
                        <h3>{{ $item->product?->product_name ?? 'S·∫£n ph·∫©m kh√¥ng t√¨m th·∫•y' }}</h3>
                    </div>
                    <div class="cartp-quantity">
                        <input type="number" value="{{ $item->quantity }}" min="1" class="cartp-qty-input">
                    </div>
                    <div class="cartp-price" data-price="{{ $item->product?->price ?? 0 }}">
                        {{-- FIX L·ªñI 500: D√πng To√°n t·ª≠ Nullsafe (?->) --}}
                        {{ number_format($item->product?->price ?? 0, 0, ',', '.') }}ƒë
                    </div>
                    {{-- G·∫Øn ID c·ªßa CartItem v√†o n√∫t x√≥a --}}
                    <button type="button" class="cartp-remove" data-cart-id="{{ $item->cart_id }}">&times;</button>
                </div>
            @empty
                <p>üõí Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
            @endforelse
        </div>

        @if(isset($cartItems) && $cartItems->count() > 0)
            <div class="cartp-footer">
                <div class="cartp-total">
                    T·ªïng c·ªông: <span
                        {{-- FIX L·ªñI 500: C·∫ßn ki·ªÉm tra Nullsafe trong h√†m sum --}}
                        id="cartp-total">{{ number_format($cartItems->sum(fn($i) => ($i->product?->price ?? 0) * $i->quantity), 0, ',', '.') }}ƒë</span>
                </div>
                <div class="cartp-footer-buttons">
                    {{-- N√∫t n√†y c·∫ßn Controller::destroyMany v√† Route::delete('/cart-items') --}}
                    
                    <button class="cartp-checkout">üí≥ Thanh to√°n ngay</button>
                </div>
            </div>
        @endif
    </div>

    {{-- Footer --}}
    @include('partials.footer')

    <script>
        // --- 1. H√ÄM T√çNH T·ªîNG C·ªòNG ---
        function cartpUpdateTotal() {
            const items = document.querySelectorAll('.cartp-item');
            let total = 0;

            items.forEach(item => {
                const cb = item.querySelector('.cartp-select');
                const price = parseInt(item.querySelector('.cartp-price').dataset.price);
                const qty = parseInt(item.querySelector('.cartp-qty-input').value);
                const itemTotal = price * qty;
                
                const formattedItemTotal = itemTotal.toLocaleString('vi-VN', { maximumFractionDigits: 0 });
                item.querySelector('.cartp-price').textContent = formattedItemTotal + 'ƒë';

                if (cb.checked) total += itemTotal;
            });
            
            const formattedTotal = total.toLocaleString('vi-VN', { maximumFractionDigits: 0 });
            const totalElement = document.getElementById('cartp-total');
            if (totalElement) {
                totalElement.textContent = formattedTotal + 'ƒë';
            }
        }

        // --- 2. H√ÄM X√ìA M·ª§C GI·ªé H√ÄNG (FETCH API) ---
        /**
         * G·ª≠i y√™u c·∫ßu DELETE ƒë·∫øn route /cart/{cartId} v√† c·∫≠p nh·∫≠t giao di·ªán.
         * @param {string} cartId ID c·ªßa m·ª•c gi·ªè h√†ng (CartItem ID).
         * @param {HTMLElement} elementToDelete Ph·∫ßn t·ª≠ HTML c·∫ßn x√≥a kh·ªèi DOM.
         */
        async function deleteCartItem(cartId, elementToDelete) {
            const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
            
            // 1. Ki·ªÉm tra ƒëi·ªÅu ki·ªán c·∫ßn thi·∫øt
            if (!csrfToken) {
                console.error('L·ªói: Kh√¥ng t√¨m th·∫•y CSRF Token.');
                return;
            }

            // >> S·ª¨A L·ªñI: S·ª≠ d·ª•ng k√Ω t·ª± Unicode ƒë·ªÉ ki·ªÉm tra l·ªói Blade
            const isBladeSyntaxLeaked = cartId && (cartId.toString().includes('\u007B') || cartId.toString().includes('\u007D'));

           

            const url = `/cart/${cartId}`;
            console.log(`ƒêang g·ª≠i y√™u c·∫ßu DELETE cho m·ª•c ID: ${cartId} t·∫°i URL: ${url}`);

            try {
                const response = await fetch(url, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': csrfToken
                    },
                });

                // Ki·ªÉm tra Content-Type v√† ph√¢n t√≠ch ph·∫£n h·ªìi
                const contentType = response.headers.get("content-type");
                let data = { success: false, message: 'L·ªói kh√¥ng x√°c ƒë·ªãnh.' };
                if (contentType && contentType.indexOf("application/json") !== -1) {
                    data = await response.json();
                } else if (response.status === 405) {
                    data.message = `L·ªói HTTP 405 (Method Not Allowed). Route DELETE /cart/{id} kh√¥ng ƒë∆∞·ª£c c√¥ng nh·∫≠n.`;
                } else if (response.status === 419) {
                    data.message = `L·ªói HTTP 419 (Page Expired). CSRF Token h·∫øt h·∫°n. Vui l√≤ng refresh trang.`;
                }

                if (response.ok) {
                    // X√≥a th√†nh c√¥ng (Server tr·∫£ v·ªÅ 200/204)
                    console.log('X√≥a th√†nh c√¥ng:', data.message);
                    if (elementToDelete && elementToDelete.parentNode) {
                        elementToDelete.remove();
                        cartpUpdateTotal(); // C·∫≠p nh·∫≠t l·∫°i t·ªïng ti·ªÅn
                        console.log('ƒê√£ c·∫≠p nh·∫≠t giao di·ªán.');
                    }
                } else {
                    // X√≥a th·∫•t b·∫°i (L·ªói 4xx, 5xx)
                    console.error(`--- L·ªñI X√ìA M·ª§C GI·ªé H√ÄNG (HTTP ${response.status}) ---`);
                    console.error('L·ªói t·ª´ Server:', data.message || 'Kh√¥ng c√≥ message c·ª• th·ªÉ.');
                    
                    // Th√™m ph·∫ßn t·ª≠ l·ªói t·∫°m th·ªùi v√†o DOM ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y
                    const errorMsg = document.createElement('div');
                    errorMsg.style.cssText = 'color: #D93025; background: #FDE2E1; padding: 8px; border: 1px solid #D93025; border-radius: 4px; margin-top: 5px; font-weight: 600;';
                    errorMsg.textContent = `L·ªñI X√ìA (HTTP ${response.status}): ${data.message}`;
                    elementToDelete.before(errorMsg);
                    setTimeout(() => errorMsg.remove(), 7000); 

                }
            } catch (error) {
                console.error('L·ªói k·∫øt n·ªëi m·∫°ng ho·∫∑c x·ª≠ l√Ω:', error);
            }
        }


        // --- 3. KH·ªûI T·∫†O S·ª∞ KI·ªÜN ---
        document.addEventListener('DOMContentLoaded', () => {

            // G√°n s·ª± ki·ªán thay ƒë·ªïi s·ªë l∆∞·ª£ng v√† ch·ªçn/b·ªè ch·ªçn
            document.querySelectorAll('.cartp-qty-input').forEach(i => i.addEventListener('input', cartpUpdateTotal));
            document.querySelectorAll('.cartp-select').forEach(cb => cb.addEventListener('change', cartpUpdateTotal));
            
            // G√°n s·ª± ki·ªán cho n√∫t X√ìA 1 M·ª§C
            document.querySelectorAll('.cartp-remove').forEach(btn => {
                btn.addEventListener('click', () => {
                    const item = btn.closest('.cartp-item');
                    // L·∫•y ID t·ª´ thu·ªôc t√≠nh data-cart-id
                    const id = btn.getAttribute('data-cart-id'); 
                    
                    // Th·ª≠ x√≥a
                    deleteCartItem(id, item);
                });
            });

            // X√ìA NHI·ªÄU M·ª§C - C·∫¶N VI·∫æT H√ÄM RI√äNG S·ª¨ D·ª§NG Route::delete('/cart-items')
            const deleteSelectedBtn = document.querySelector('.cartp-delete-selected');
            if (deleteSelectedBtn) {
                deleteSelectedBtn.addEventListener('click', () => {
                     console.warn('Ch·ª©c nƒÉng "X√≥a m·ª•c ƒë√£ ch·ªçn" ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a route, nh∆∞ng c·∫ßn ph∆∞∆°ng th·ª©c JS ri√™ng ƒë·ªÉ g·ª≠i m·∫£ng IDs.');
                });
            }

            // Thanh to√°n
            document.querySelector('.cartp-checkout')?.addEventListener('click', () => {
                const selectedIds = Array.from(document.querySelectorAll('.cartp-select:checked'))
                    // ƒê√£ s·ª≠a: D√πng .dataset.id ƒë√£ ƒë∆∞·ª£c g√°n b·∫±ng $item->cart_id
                    .map(cb => cb.closest('.cartp-item').dataset.id);

                if (selectedIds.length === 0) {
                    console.warn('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ thanh to√°n!');
                    return;
                }

                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/pay';
                form.innerHTML = `
                    <input type="hidden" name="_token" value="{{ csrf_token() }}">
                    <input type="hidden" name="ids" value="${selectedIds.join(',')}">
                `;
                document.body.appendChild(form);
                form.submit();
            });

            // T√≠nh to√°n t·ªïng ti·ªÅn khi trang v·ª´a load
            cartpUpdateTotal(); 
        });
    </script>
</body>

</html>
